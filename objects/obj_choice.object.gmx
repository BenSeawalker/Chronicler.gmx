<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_choice_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//inherited
smw = 64*6-25;
smh = string_height("W")+24;

//new vars
comp = instance_create(x,y,obj_completion);
cbox = textbox_create();
    cbox.single_line = true;
    cbox.color_text = c_black;
        comp.tbox = cbox;
        
tbox = textbox_create();
    tbox.single_line = true;
    tbox.color_text = c_black;

twidth = 64*2;

mx = 0;
my = 0;
drag = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///input
if(mouse_check_button_pressed(mb_left))
{
    mx = mouse_x;
    my = mouse_y;
}


if(mouse_check_button_pressed(mb_right))
{
    if(hover)
    {
        if(link!=noone) link.highlight = false;    
    
        ds_list_delete(owner.choices,ds_list_find_index(owner.choices,id));
        
        //update bubble minimum size
        owner.minwidth = max(180,30+owner.choices[| 0].minwidth*ds_list_size(owner.choices));
        owner.targetwidth = max(owner.targetwidth,owner.minwidth);
        
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///selection
if(selected)
{
    title = "";
    if(mouse_check_button(mb_left) &amp;&amp; point_distance(mx,my,mouse_x,mouse_y)&gt;2) drag = true;
}
/*else if(hover)
{
    title = tbox.text;
    if(title == "") title = "*";
    maxwidth = max(string_width(title)+10,32);
}*/
else
{
    title = "*";
}

if(drag)
{
    deselect_all(owner);
    var b = bubble_at_point(mouse_x,mouse_y);
    if(b!=owner &amp;&amp; b!=noone){link = b; b.highlight = true;}
    else link = obj_mlink;
    if(mouse_check_button_released(mb_left))
    {
        if(b!=owner &amp;&amp; b!=noone) b.highlight = false;
        else link = noone;
        drag = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(owner!=noone)colour = owner.colour;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
if(selected)
{
    var tc = c_white;
    var cwidth = max(string_width(cbox.text)+10,48)
        twidth = max(string_width(tbox.text)+10,64*2)
        smw = cwidth+twidth+56;
        
    var s = (smw/(smw+(smw-width))); // scale
    //draw_text_colour(x,y+10,"*IF",tc,tc,tc,tc,1);
    draw_rectangle_colour(x+5,y+10,x+5+cwidth*s,y+height-10,tc,tc,tc,tc,false);
    textbox_draw(cbox,x+10,y+10,x+10+cwidth*s,y+height-10,false);
    
    var xx = x+10+cwidth*s;
    //draw_text_colour(xx,y+10,"-&gt;",tc,tc,tc,tc,1);
    draw_arrow_colour(xx,y+height/2,xx+15,y+height/2,16,tc);
    draw_rectangle_colour(xx+20,y+10,xx+20+twidth*s,y+height-10,tc,tc,tc,tc,false);
    textbox_draw(tbox,xx+25,y+10,xx+25+twidth*s-5,y+height-10,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
