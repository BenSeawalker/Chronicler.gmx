<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startw = window_get_width();

width = 0;
height = 50;

open = false;

left = ds_list_create();
right = ds_list_create();
center = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width = window_get_width()-(x*2);
x = xstart*(width/startw);

var mx,my, h;
mx = window_mouse_get_x();
my = window_mouse_get_y();

open = ((my&lt;height) &amp;&amp; (mx&gt;x &amp;&amp; mx&lt;x+width));

y = lerp(y,(-height)*!open,0.1*lag_time);

var tw = 0;
for(var i=0;i&lt;ds_list_size(left);i++)
{
    with(left[|i])
    {
        y = ystart+other.y+5;
        x = other.x+10+tw+5*i;
        tw += sprite_get_width(sprite_index);
    }
}

tw = 0;
for(var i=ds_list_size(right);i&gt;0;i--)
{
    var ind = ds_list_size(right)-i;
    with(right[|ind])
    {
        tw += sprite_get_width(sprite_index);
        y = ystart+other.y+5;
        x = other.x+other.width-(10+tw+5*ind);
    }
}



tw = 0;
var sc = ds_list_size(center);
for(var i=0;i&lt;sc;i++)
{
    with(center[|i])
    {
        
        var sw = sprite_get_width(sprite_index);
        y = ystart+other.y+5;
        x = other.x+((other.width/2)-(sc*sw)/2)+10+tw+5*i;
        tw += sw;
    }
}
/*
with(obj_file_component)
{
    x = other.x+offset*(other.width/other.startw);//*(other.width/other.startw);
    //if(x&gt;other.x+other.width/2)
    //    x = other.x+other.width-(other.xstart+other.startw-xstart);//+(other.width-other.startw)//-other.width);
    //else
    //    x = xstart+(other.x-other.xstart);//*(other.width/other.startw);
    
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(obj_message_callback) &amp;&amp; !var_screen.visible)
{
    draw_rectangle_colour(x,y,x+width,y+height,c_menu,c_menu,c_menu,c_menu,false)
    if(!open) draw_arrow_colour(x+width/2,4,x+width/2,28,24,c_menu);
    
    
    /*
    var col = c_black;
    if(GUI_mode) col = c_orange;
    
    //GUI mode
    var x1,y1,x2,y2, w;
        w = sprite_get_width(spr_icons);
        x1 = view_wport[0]/2-w;
        y1 = y+5;
        x2 = x1+w;
        y2 = y1+sprite_get_height(spr_icons);;
        
    draw_sprite(spr_icons,146,x1,y1);//16
    draw_rectangle_colour(x1,y1,x2,y2,col,col,col,col,true);
    
    if(mouse_check_button_pressed(mb_left))
    {
        if(in_rect(window_mouse_get_x(),window_mouse_get_y(),x1,y1,x2-x1,y2-y1))
        {
            switch_GUI_mode(true);
        }
    }
    
    
    //Programmer mode
    col = c_black;
    if(!GUI_mode) col = c_orange;
        x1 += w+10;
        x2 += w+10;
        
    draw_sprite(spr_icons,150,x1,y1);//47
    draw_rectangle_colour(x1,y1,x2,y2,col,col,col,col,true);
    
    if(mouse_check_button_pressed(mb_left))
    {
        if(in_rect(window_mouse_get_x(),window_mouse_get_y(),x1,y1,x2-x1,y2-y1))
        {
            switch_GUI_mode(false);
        }
    }
    */
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
