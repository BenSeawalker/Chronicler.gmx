<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>actions = ds_list_create();
index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(keyboard_check_pressed(vk_anykey) || mouse_check_button_pressed(mb_any))
//    add_undo();


if(keyboard_check(vk_control))
{
    var vx,vy;
        vx = view_xview[0];
        vy = view_yview[0];
                
    //redo
    if((keyboard_check(vk_shift) &amp;&amp; keyboard_check_pressed(ord('Z'))) || keyboard_check_pressed(ord('Y')))
    {
        if(actions[|index] == actions[|index-1] || actions[|index] == actions[|index+1] || actions[|index] == actions[|index-2])
        {
            ds_list_delete(actions,index);
            index--;
        }
        if(index&lt;ds_list_size(actions)-1)
        {
            show_popup("Redo");
            index++;
            load_chronicler_project(actions[|index],true);
            view_xview[0] = vx;
            view_yview[0] = vy;
        }
    }
    //undo
    else if(!keyboard_check(vk_shift) &amp;&amp; keyboard_check_pressed(ord('Z')))
    {
        
        if(actions[|index] == actions[|index-1] || actions[|index] == actions[|index+1] || actions[|index] == actions[|index-2])
        {
            ds_list_delete(actions,index);
            index--;
        }
        if(index&gt;0)
        {
            show_popup("Undo");
            index-=1;
            load_chronicler_project(actions[|index],true);
            view_xview[0] = vx;
            view_yview[0] = vy;
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
