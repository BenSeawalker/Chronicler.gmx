<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_dropdown = false;
dropdown_width = (string_width(vartype_temp)+16);
dropdown = ds_list_create();
    ds_list_add(dropdown,vartype_global);
    ds_list_add(dropdown,vartype_temp);

rows = 2;
    
type = vartype_global;
lastname = "";
name = textbox_create();
    name.single_line = true;
    name.color_text = c_black;
value = textbox_create();
    value.single_line = true;
    value.color_text = c_black;

editable = true;

width = 600+dropdown_width;
height = 64;

selected = false;
new = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(name) instance_destroy();
with(value) instance_destroy();

if(type == vartype_temp)
{
    with(obj_scene)
    {
        var ind = ds_list_find_index(tempvars,other.id);
        if(ind&gt;-1)ds_list_delete(tempvars,ind);
    }
}
ds_list_delete(var_screen.vars,ds_list_find_index(var_screen.vars,id));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///visible
if(!visible) exit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_check_button_pressed(mb_left))
{
    var dd = in_rect(mouse_x,mouse_y,x-dropdown_width,y,dropdown_width,height*ds_list_size(dropdown));
    selected = in_rect(mouse_x,mouse_y,x,y,width,height);
    if(selected)
    {
        //dropdown
        if(in_rect(mouse_x,mouse_y,x,y,dropdown_width,height))
            show_dropdown = !show_dropdown;
        else
            show_dropdown = dd;
    }
    else if(!dd)
    {
        show_dropdown = false;
    }
}

if(mouse_check_button_pressed(mb_right))
{
    if(in_rect(mouse_x,mouse_y,x,y,width,height))
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///refactor
if(refactorvars)
{
    if(textbox_focus == name)
    {
        if(name.text != lastname)
        {
            refactor_var(lastname,name.text);
            lastname = name.text;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(in_rect(x,y,view_xview[0]-width,view_yview[0]-height,view_wview[0]+width,view_hview[0]+height))
//{
    colour = c_black;
    if(selected) colour = c_orange;
    
    draw_rectangle_colour(x,y,x+width,y+height,c_white,c_white,c_white,c_white,false);
    draw_rectangle_colour(x,y,x+width,y+height,colour,colour,colour,colour,true);
    
    var sname = "";
    with(obj_scene)
    {
        if(ds_list_find_index(tempvars,other.id)&gt;-1) sname = chr(10)+"("+title.text+")";
    }
    
    draw_text_centered(x+dropdown_width/2,y+height/2,type+sname,c_black);
    draw_line_width_colour(x+dropdown_width,y,x+dropdown_width,y+height,4,colour,colour);
    
    var x1,y1,x2,y2;
        x1 = x+dropdown_width+10;
        y1 = y+10;
        x2 = x+dropdown_width+(width-dropdown_width)/rows-10;
        y2 = y+height-10;
    
    draw_rectangle_colour(x1,y1,x2,y2,colour,colour,colour,colour,true);
    if(selected || new)
    {
        textbox_draw(name,x1,y1,x2,y2,false);
        if(rows == 1) new = false;
    }
    else
        textbox_draw_simple(name,x1,y1,x2,y2);
    
    if(rows==2)
    {
        x1 = x2+10;
        draw_line_width_colour(x1,y1,x1,y2,4,colour,colour);
        
        x1 += 10;
        x2 = x+width-10;
        draw_rectangle_colour(x1,y1,x2,y2,colour,colour,colour,colour,true);
        if(selected || new)
        {
            textbox_draw(value,x1,y1,x2,y2,false);
            new = false;
        }
        else
            textbox_draw_simple(value,x1,y1,x2,y2);
    }
//}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///dropdown

if(editable &amp;&amp; show_dropdown)
{
    for(var i=0;i&lt;ds_list_size(dropdown);i++)
    {
        var x1,y1,x2,y2;
            x1 = x-dropdown_width;
            y1 = y+i*(height-10);
            x2 = x1+dropdown_width;
            y2 = y1+height;
            
        draw_rectangle_colour(x1,y1,x2,y2,c_white,c_white,c_white,c_white,false);
        draw_rectangle_colour(x1,y1,x2,y2,colour,colour,colour,colour,true);
        draw_text_centered(x1+dropdown_width/2,y1+height/2,dropdown[| i],c_black);
        
        if(mouse_check_button_pressed(mb_left))
        {    
            if(in_rect(mouse_x,mouse_y,x1,y1,dropdown_width,height))
            {
                if(type == vartype_temp)
                {
                    with(obj_scene)
                    {
                        var ind = ds_list_find_index(tempvars,other.id);
                        if(ind&gt;-1)ds_list_delete(tempvars,ind);
                    }
                }
                    
                type = dropdown[| i];
                show_dropdown = false;
                
                if(type == vartype_temp)
                {
                    with(obj_scene)
                    {
                        var ind = ds_list_find_index(tempvars,other.id);
                        if(ind&gt;-1) ds_list_delete(tempvars,ind);
                    }
                    ds_list_add(current_scene.tempvars,id);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
